@page "/ServerTest"
@using Core
@inject Core.PalDedicatedServer palServer
@rendermode InteractiveServer

<h3>ServerTest</h3>
<li>@palServer.ServerState</li>
<button class="btn btn-primary" @onclick="startServer">Start</button>
<button class="btn btn-primary" @onclick="stopServer">Stop</button>

<ServerConfig/>



@code {
    // private ServerConfig serverConfig;
    // private string DifficultyValue => Enum.GetName(typeof(ServerConfigDifficultyEnum), serverConfig.Difficulty);
    private void startServer()
    {
        palServer.Start();
    }



    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            palServer.OnServerStatusChanged += (s, e) =>
            {
                InvokeAsync(StateHasChanged).Wait();
            };

        }
    }
    private void stopServer()
    {
        palServer.ShutdownByRCON();

    }


    

}
